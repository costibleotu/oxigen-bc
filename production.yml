version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_media:

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: oxigen_api_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    volumes:
      - production_media:/app/oxigen_api/media

  media:
    image: nginx:stable-alpine
    volumes:
      - production_media:/usr/share/nginx/html/media

  frontend:
    build:
      context: .
      dockerfile: ./compose/production/frontend/Dockerfile
    image: oxigen_api_production_frontend
    depends_on:
      - django

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: oxigen_api_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: oxigen_api_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"

  redis:
    image: redis:5.0

  # celeryworker:
  #   <<: *django
  #   image: oxigen_api_production_celeryworker
  #   command: /start-celeryworker

  # celerybeat:
  #   <<: *django
  #   image: oxigen_api_production_celerybeat
  #   command: /start-celerybeat

  # flower:
  #   <<: *django
  #   image: oxigen_api_production_flower
  #   command: /start-flower
